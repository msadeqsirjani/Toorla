class GrandParent inherits Object:
    public function GrandParent() returns int:
        return 1;
    end

    public function GrandParent(a:int, b:int) returns int:
        return 1;
    end

    private function sayHello() returns string:
        return "Hello dear friend";
    end
end

class Parent inherits Test:
    private field age int;
    private field isMarried boolean;
    private field fullname string;
    private field parent GrandParent;

    public function Parent() returns int:
        return 1;
    end

    public function setAge(a:int , b:int) returns int:
        self.age = a - b;
        return self.age;
    end

    public function appendNames(names:int[]) returns int:
        var counter = 0;
        var newAge = 22;
        var lastAge = 23;
        while(counter < names.length)
            self.fullname = self.fullname + names[counter];
            self.isMarried = false;
        return self.age;
    end

    public function validateData(a:int , b: int) returns string:
        if(a<b)
        begin
            var distance = 3;
            return "b is bigger than a";
        end
        elif(a>b)
        begin
            if(b<0)
                var happiness = "value";
                print("b is negative");
            return "a is bigger than b";
        end
        else
            return "a and b are equal";
    end
end
entry class MainClass:
    public function main() returns int:
        var a = 5;
        var b = 6;
        names = new string[4];
        var bigger = true;
        operator = new Parent();
        sub = operator.setAge();
        sum = operator.appendNames(names);
        bigger = operator.validateData(a,b);
        var distance = true;
        parent = new Parent();
        operator = new GrandParent(1, 2);
        return 1;
    end
end
